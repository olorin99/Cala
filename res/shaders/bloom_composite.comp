
layout (local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

#include "global_data.glsl"

layout (set = 0, binding = 0) uniform texture2D sampledImages[];
layout (set = 0, binding = 2) uniform sampler samplers[];
layout (set = 0, binding = 3) uniform writeonly image2D storageImages[];
layout (rgba32f, set = 0, binding = 3) uniform readonly image2D readStorageImages[];

layout (push_constant) uniform PushData {
    int upsampleIndex;
    int hdrIndex;
    int outputIndex;
};

void main() {
    ivec2 globCoords = ivec2(gl_GlobalInvocationID.xy);

    ivec2 upsampleSize = imageSize(readStorageImages[upsampleIndex]);
    ivec2 hdrSize = imageSize(readStorageImages[hdrIndex]);
    ivec2 outputSize = imageSize(storageImages[outputIndex]);

    if (any(greaterThanEqual(globCoords, outputSize)))
        return;

    vec4 upsample = imageLoad(readStorageImages[upsampleIndex], globCoords) / 5;
    vec4 hdr = imageLoad(readStorageImages[hdrIndex], globCoords);

    vec4 result = mix(hdr, upsample, globalData.bloomStrength);

    imageStore(storageImages[outputIndex], globCoords, result);

}
